{"version":3,"sources":["components/FragContainer.js","pages/uen-validate/uen-validate.js","components/Color/Color.jsx","pages/WeatherForecast/Weather.js","pages/WeatherForecast/WeatherForecastPage.js","pages/home/home.js","components/Navigation/NavigationElements.js","components/Navigation/Navigation.js","components/Header/Header.js","components/Footer/FooterElements.js","components/Footer/Footer.js","App.js","index.js"],"names":["FragContainer","styled","div","ErrorMsg","msg","Form","Control","Feedback","type","className","SuccessAlert","Alert","variant","Uen_Validate","useForm","criteriaMode","register","handleSubmit","setValue","errors","formState","uen","useRef","useState","uenErr","setUenErr","uenSuccess","setUenSuccess","display_msg_reset","Card","Body","Title","onSubmit","data","console","log","entityTypeIndicator","trim","toUpperCase","uenLen","length","test","ok","eti","substring","Check_UEN","InputGroup","style","width","margin","hasValidation","required","minLength","value","message","maxLength","onChange","e","preventDefault","target","placeholder","name","id","ref","isInvalid","isValid","Button","types","mainColor","subColor","weatherIconColor","WeatherCard","WeatherIcon","forecast","size","faSun","faMoon","faCloudSun","icon","color","WeatherDisplay","location","regexTime","days","currentDate","Date","info","header","i","start","valid_period","end","startTime","getHours","getMinutes","endTime","match","forecasts","day","getDay","class","Weather","weather","setWeather","time","setTime","area","form","setForm","sg_loc","location_options","map","indexOf","apiKey","a","fetch","getCurrentDate","then","res","json","items","separator","date","getDate","month","getMonth","year","getFullYear","getCurrentTime","hour","min","handleChange","forecastData","Group","FloatingLabel","controlId","label","Select","element","hidden","undefined","Service","eKey","contents","Accordion","Item","eventKey","Header","content","main","url","href","Home","media_max_width","NavBar","Link","button","NavButton","NavDivider","hr","Navigation","to","process","path","exact","component","DesignByContainer","footer","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abc6dd35.chunk.js","sourcesContent":["import styled from \"styled-components\"\r\n\r\n//    border:solid red;\r\nconst FragContainer = styled.div`\r\n    padding: 5px 25px;\r\n    min-height: 100vh;\r\n    height: auto;\r\n    overflow-wrap:break-word;\r\n    white-space:normal;\r\n\r\n    -webkit-hyphens: auto;\r\n    -ms-hyphens: auto;\r\n    hyphens: auto;\r\n`;\r\n\r\nexport default FragContainer","import { Fragment } from \"react\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n// Import Components\r\nimport Container from \"../../components/FragContainer\"\r\n\r\n\r\nconst ErrorMsg = ({ msg }) => {\r\n    return (\r\n        <Form.Control.Feedback type=\"invalid\" className=\"text-left\">\r\n            {msg}\r\n        </Form.Control.Feedback>\r\n    );\r\n}\r\n\r\nconst SuccessAlert = ({ msg }) => {\r\n    return (\r\n        <Alert variant=\"success\" >{msg}</Alert>\r\n    );\r\n}\r\n\r\nconst Uen_Validate = () => {\r\n\r\n    const { register, handleSubmit, setValue, formState: { errors } } = useForm({\r\n        criteriaMode: 'all',\r\n    });\r\n    const uen = useRef(); // uen field\r\n    const [uenErr, setUenErr] = useState(null);\r\n    const [uenSuccess, setUenSuccess] = useState(null);\r\n\r\n    // regex\r\n    function Check_UEN(uen) {\r\n\r\n        const regexBizReg = /^[0-9]{8}[A-Z]$/;\r\n        const regexLocal = /^(1|2)[0-9]{3}[0-9]{5}[A-Z]$/;\r\n        const regexOthers = /^(T|S)[0-9]{2}[A-Z]{2}[0-9]{4}[A-Z]$/;\r\n\r\n        const entityTypeIndicator = [\r\n            'LP', 'LL', 'FC', 'PF', 'RF', 'MQ', 'MM', 'NB', 'CC', 'CS', 'MB', 'FM', 'GS', 'GA', 'GB', 'DP', 'CP',\r\n            'NR', 'CM', 'CD', 'MD', 'HS', 'VH', 'CH', 'MH', 'CL', 'XL', 'CX', 'RP', 'TU', 'TC', 'FB', 'FN', 'PA',\r\n            'PB', 'SS', 'MC', 'SM'\r\n        ];\r\n\r\n        // Step 1: Check Empty\r\n        uen = uen.trim().toUpperCase();\r\n        if (uen !== \"\") {\r\n\r\n            // Step 2: Check Length (9-10 chars)\r\n            let uenLen = uen.length;\r\n\r\n            // Step 3: Check UEN Format\r\n            if (uenLen === 9) {\r\n\r\n                if (regexBizReg.test(uen)) {\r\n\r\n                    // (A) Business Registered With ACRA (9 chars - [nnnnnnnnX])\r\n                    setUenSuccess('Valid format: Business registered with ACRA');\r\n\r\n                } else {\r\n                    setUenErr('Invalid UEN format');\r\n                }\r\n\r\n\r\n            }\r\n            else if (uenLen === 10) {\r\n                if (regexLocal.test(uen)) {\r\n\r\n                    // (B) Local Companies Registered With ACRA (10 chars - [yyyynnnnnX])\r\n                    setUenSuccess('Valid format: Local companies registered with ACRA');\r\n                } else if (regexOthers.test(uen)) {\r\n                    let ok = false;\r\n\r\n                    for (let eti in entityTypeIndicator) {\r\n                        if (uen.substring(3, 5) == entityTypeIndicator[eti]) {\r\n\r\n                            // (C) All Other entities which will be issued new UEN (10 chars - [TyyPQnnnnX])\r\n                            setUenSuccess('Valid format');\r\n                            ok = true;\r\n                            break;\r\n\r\n                        }\r\n                    }\r\n                    if(!ok){\r\n                        setUenErr('Invalid UEN format');\r\n                    }\r\n                }\r\n            } else {\r\n                setUenErr('Invalid UEN format');\r\n            }\r\n        } else {\r\n            setUenErr('Invalid UEN format');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function handleChange(e) {\r\n        e.preventDefault();\r\n        setValue('uen', e.target.value);\r\n\r\n    };\r\n\r\n    function display_msg_reset() {\r\n        setUenErr(null);\r\n        setUenSuccess(null);\r\n    }\r\n\r\n    const onSubmit = data => {\r\n        if (errors.uen) {\r\n            console.log('error');\r\n        }\r\n        display_msg_reset();\r\n        Check_UEN(data.uen);\r\n        console.log(data.uen);\r\n    }\r\n\r\n    const onError = () => {\r\n        display_msg_reset();\r\n        console.log('err');\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Container>\r\n                <h1 className=\"mt-5\">Validate UEN</h1>\r\n                <Card className=\"w-card pb-5\">\r\n                    <Card.Body >\r\n                        <Card.Title>Search UEN</Card.Title>\r\n                        <Form onSubmit={handleSubmit(onSubmit, onError)}>\r\n                            <InputGroup className=\"\" style={{ width: '50%', margin: 'auto' }} hasValidation >\r\n                                <Form.Control\r\n                                    {...register(\"uen\", {\r\n                                        required: \"Required\",\r\n                                        minLength: {\r\n                                            value: 9,\r\n                                            message: \"Minimum 9 characters\"\r\n                                        },\r\n                                        maxLength: {\r\n                                            value: 10,\r\n                                            message: \"Maximum 10 characters\"\r\n                                        }\r\n                                    })}\r\n                                    onChange={handleChange}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Please Enter UEN:\"\r\n                                    name=\"uen\"\r\n                                    id=\"uen\"\r\n                                    ref={uen}\r\n                                    isInvalid={errors.uen || uenErr !== null}\r\n                                    isValid={uenSuccess}\r\n                                />\r\n                                <Button variant=\"outline-secondary\" id=\"validate-btn\" type=\"submit\" >\r\n                                    Validate\r\n                                </Button>\r\n                                {errors.uen && errors.uen.types.required && (<ErrorMsg msg={errors.uen.types.required} />)}\r\n                                {errors.uen && errors.uen.types.minLength && (<ErrorMsg msg={errors.uen.types.minLength} />)}\r\n                                {errors.uen && errors.uen.types.maxLength && (<ErrorMsg msg={errors.uen.types.maxLength} />)}\r\n                                {(<ErrorMsg msg={uenErr} />)}\r\n                            </InputGroup>\r\n                            <div style={{ width: '50%', margin: '15px auto' }}>\r\n                                {!errors.uen && uenSuccess !== null && (<SuccessAlert msg={uenSuccess} />)}\r\n                            </div>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Uen_Validate;\r\n","// Page Color Resource\r\nexport const mainColor = \"#7B9FAB\";\r\nexport const subColor = \"#82ADA3\";\r\n\r\n// Weather\r\nexport const weatherIconColor = \"#7B9FAB\";\r\n","\r\nimport styled from \"styled-components\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCloudMoon, faCloudRain, faCloudSun, faMoon, faSun } from '@fortawesome/free-solid-svg-icons'\r\nimport { WiCloudy, WiDaySunny, WiNightAltPartlyCloudy, WiNightPartlyCloudy, WiRain, WiRainMix, WiShowers, WiSunrise, WiThunderstorm } from 'weather-icons-react';\r\nimport { mainColor, subColor, weatherIconColor } from \"../../components/Color/Color.jsx\";\r\nimport './Weather.css';\r\n\r\nconst WeatherCard = styled.div`\r\n    width:30%;\r\n    margin-left:auto;\r\n    margin-right:auto;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\n// Display Icon Based On Weather Condition\r\nconst WeatherIcon = ({ forecast }) => {\r\n    var size = \"40%\";\r\n    if (forecast == \"Fair (Day)\") {\r\n        var icon_name = faSun;\r\n    }\r\n    else if (forecast == \"Fair (Night)\") {\r\n        var icon_name = faMoon;\r\n    }\r\n    else if (forecast == \"Fair & Warm\") {\r\n\r\n    }\r\n    else if (forecast == \"Partly Cloudy (Day)\") {\r\n        var icon_name = faCloudSun;\r\n    }\r\n    else if (forecast == \"Partly Cloudy (Night)\") {\r\n        var icon = <WiNightAltPartlyCloudy size={size} color={weatherIconColor}  />;\r\n    }\r\n    else if (forecast == \"Cloudy\") {\r\n        var icon = <WiCloudy size={size} color={weatherIconColor}  />;\r\n    }\r\n    else if (forecast == \"Hazy\") {\r\n\r\n    }\r\n    else if (forecast == \"Slightly Hazy\") {\r\n\r\n    }\r\n    else if (forecast == \"Windy\") {\r\n\r\n    }\r\n    else if (forecast == \"Mist\") {\r\n\r\n    }\r\n    else if (forecast == \"Light Rain\") {\r\n        var icon = <WiRain size={size} color={weatherIconColor} className=\"w-icon\" />;\r\n\r\n    }\r\n    else if (forecast == \"Moderate Rain\") {\r\n        var icon = <WiRainMix size={size} color={weatherIconColor} className=\"w-icon\" />;\r\n\r\n    }\r\n    else if (forecast == \"Heavy Rain\") {\r\n\r\n    }\r\n    else if (forecast == \"Passing Showers\") {\r\n\r\n    }\r\n    else if (forecast == \"Light Showers\") {\r\n\r\n    }\r\n    else if (forecast == \"Showers\") {\r\n        var icon = <WiShowers size={size} color={weatherIconColor} />;\r\n    }\r\n    else if (forecast == \"Heavy Showers\") {\r\n\r\n    }\r\n    else if (forecast == \"Thundery Showers\") {\r\n        var icon = <WiThunderstorm size={size} color={weatherIconColor} />;\r\n\r\n    }\r\n    else if (forecast == \"Heavy Thundery Showers\") {\r\n        var icon = <WiThunderstorm size={size} color={weatherIconColor} />;\r\n\r\n    }\r\n    else if (forecast == \"Heavy Thundery Shower With Gusty Winds\") {\r\n\r\n    }\r\n\r\n\r\n    var card_body = <div className=\"\">{icon}<div className=\"card-body\">{forecast}</div></div>\r\n\r\n    return card_body;\r\n}\r\n\r\n\r\nconst WeatherDisplay = ({ location, data }) => {\r\n    let regexTime = '^([0-1][0-9]|[2][0-4]):[0]{2}$';\r\n\r\n    // Date & Time\r\n    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\r\n\r\n\r\n\r\n    var currentDate = new Date();\r\n    console.log(location);\r\n    var info, header = \"\";\r\n    for (var i = 0; i < data.length; i++) {\r\n        var start = new Date(data[i].valid_period.start);\r\n        var end = new Date(data[i].valid_period.end);\r\n        var startTime = (start.getHours() < 10 ? \"0\" + start.getHours() : start.getHours()) + \":\" + (start.getMinutes() < 10 ? \"0\" + start.getMinutes() : start.getMinutes());\r\n        var endTime = (end.getHours() < 10 ? \"0\" + end.getHours() : end.getHours()) + \":\" + (end.getMinutes() < 10 ? \"0\" + end.getMinutes() : end.getMinutes());\r\n\r\n        if (startTime.match(regexTime) && endTime.match(regexTime)) {\r\n            if (currentDate > start && currentDate < end) {\r\n                var forecast = data[i].forecasts[location].forecast;\r\n                console.log(startTime + \" to \" + endTime);\r\n                var day = days[currentDate.getDay()];\r\n                header = <div class=\"card-header\">{day}</div>\r\n\r\n                info = <WeatherIcon forecast={forecast} />;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return (<WeatherCard className=\"card w-card\">{header}{info}</WeatherCard>);\r\n}\r\n\r\nexport default WeatherDisplay;","import { Fragment } from \"react\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport styled from \"styled-components\";\r\nimport './Weather.css';\r\n\r\n\r\n\r\n// Import Components\r\nimport Container from \"../../components/FragContainer\";\r\nimport WeatherDisplay from \"./Weather\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport FloatingLabel from 'react-bootstrap/FloatingLabel'\r\n\r\n\r\nconst Weather = () => {\r\n    // Current Date\r\n    const currentDate = new Date();\r\n\r\n    // Weather Data\r\n    const [weather, setWeather] = useState([]);\r\n\r\n    const [time, setTime] = useState({\r\n        time: \"\"\r\n    });\r\n\r\n    // Form\r\n    const [form, setForm] = useState({\r\n        area: 0\r\n    });\r\n\r\n    // Singapore Locations\r\n    const sg_loc = [\r\n        'Ang Mo Kio', 'Bedok', 'Bishan', 'Boon Lay', 'Bukit Batok', 'Bukit Merah', 'Bukit Panjang', 'Bukit Timah',\r\n        'Central Water Catchment', 'Changi', 'Choa Chu Kang', 'Clementi', 'City', 'Geylang', 'Hougang', 'Jalan Bahar',\r\n        'Jurong East', 'Jurong Island', 'Jurong West', 'Kallang', 'Lim Chu Kang', 'Mandai', 'Marine Parade', 'Novena',\r\n        'Pasir Ris', 'Paya Lebar', 'Pioneer', 'Pulau Tekon', 'Pulau Ubin', 'Punggol', 'Queenstown', 'Seletar',\r\n        'Sembawang', 'Sengkang', 'Sentosa', 'Serangoon', 'Southern Islands', 'Sungei Kadut', 'Tampines', 'Tanglin',\r\n        'Tengah', 'Toa Payoh', 'Tuas', 'Western Islands', 'Western Water Catchment', 'Woodlands', 'Yishun'\r\n    ];\r\n\r\n    // Option Values Of Singapore Areas\r\n    const location_options = sg_loc.map((location) =>\r\n        <option value={sg_loc.indexOf(location)}>{location}</option>\r\n    );\r\n\r\n\r\n    const apiKey = \"https://api.data.gov.sg/v1/environment/2-hour-weather-forecast\";\r\n    async function forecastData(location) {\r\n        const data = await fetch(\r\n            `${apiKey}?date=${getCurrentDate(\"-\")}`\r\n        )\r\n            .then((res) => res.json())\r\n            .then((data) => data);\r\n\r\n        setWeather({ data: data.items });\r\n\r\n    }\r\n\r\n    // Retrieval Of Current Date (e.g. 2021-08-16)\r\n    function getCurrentDate(separator = '') {\r\n        let currentDate = new Date();\r\n        let date = currentDate.getDate();\r\n        let month = currentDate.getMonth() + 1;\r\n        let year = currentDate.getFullYear();\r\n        return `${year}${separator}${month < 10 ? `0${month}` : `${month}`}${separator}${date}`;\r\n    }\r\n\r\n    function getCurrentTime() {\r\n        let currentDate = new Date();\r\n        let hour = currentDate.getHours();\r\n        let min = currentDate.getMinutes();\r\n        return `${hour}:${min < 10 ? `0${min}` : `${min}`}`;\r\n    }\r\n\r\n    // On Change Set The Data\r\n    const handleChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n\r\n        if (name == \"area\") {\r\n            setForm({ ...form, area: value });\r\n        }\r\n\r\n        // Fetch Weather Data\r\n        forecastData(value);\r\n\r\n        // Set Current Retrieval Time\r\n        setTime({ ...time, time: getCurrentTime() });\r\n\r\n        // console.log(value);\r\n\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <Container>\r\n                <h1 className=\"mt-5\">Singapore Weather Forecast</h1>\r\n\r\n                <div className=\"weather\">\r\n                    <form>\r\n\r\n                        <Form.Group style={{ width: '50%', margin: 'auto' }}>\r\n                            <FloatingLabel controlId=\"floatingSelect\" label=\"Please Select An Area\">\r\n                                <Form.Select\r\n                                    name=\"area\"\r\n                                    className=\"col-3\"\r\n                                    id=\"area-select\"\r\n                                    onChange={(element) => handleChange(element)}\r\n                                >\r\n                                    <option hidden></option>\r\n                                    {location_options}\r\n                                </Form.Select>\r\n                            </FloatingLabel>\r\n                        </Form.Group>\r\n\r\n                    </form>\r\n\r\n                    {/* {console.log(new Date('2021-08-16T00:30:00+08:00'))} */}\r\n                    {/* {console.log(new Date())} */}\r\n                    <div>Retrieved at <span id=\"current-time\">{time.time}</span></div>\r\n\r\n                    {weather.data != undefined ? (\r\n                        <div>\r\n                            <WeatherDisplay location={form.area} data={weather.data} style={{ margin: '30px' }} />\r\n                        </div>\r\n                    ) : null}\r\n                </div>\r\n            </Container>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Weather;\r\n","import { Fragment } from \"react\";\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// Import Components\r\nimport Container from \"../../components/FragContainer\"\r\nimport { ArrowRight } from \"react-bootstrap-icons\";\r\n\r\nconst Service = ({ eKey, header, contents }) => {\r\n\r\n    return (\r\n        <Accordion.Item eventKey={eKey}>\r\n            <Accordion.Header>{header}</Accordion.Header>\r\n            <Accordion.Body className=\"text-left\" >\r\n                <>\r\n                    {contents.map(content => (\r\n                        <div className=\"content\"><ArrowRight /> {content.main}\r\n                            {content.url ? <a href={content.url}>here</a> : null}.\r\n                        </div>\r\n                    ))}\r\n                </>\r\n            </Accordion.Body>\r\n        </Accordion.Item >\r\n    );\r\n}\r\n\r\nconst Home = () => {\r\n\r\n    // Service 1\r\n    let service1_content = [\r\n        { main: 'Verify standard identification number of an entity.' },\r\n        { main: 'Make sure that the UEN provided comply with the correct format.' },\r\n        { main: 'There are valid formats: (A) Business registered with ACRA, (B) Local companies with ACRA, (C) All other entities with new UEN' },\r\n        { main: 'For more information please refer to ', url: 'https://www.uen.gov.sg/ueninternet/faces/pages/admin/aboutUEN.jspx' }\r\n    ];\r\n\r\n    // Service 2\r\n    let service2_content = [\r\n        {main:'View Singapore weather forecast for the next 2 hours.'},\r\n        {main: 'Users is able to choose a valid location in Singapore to know its weather forecast.'}\r\n    ];\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Container>\r\n                <h1 className=\"mt-5\">OneST</h1>\r\n                <Card className=\"w-card\">\r\n                    <Card.Body >\r\n                        <Card.Title>Welcome to Tracie's OneST</Card.Title>\r\n                        <Accordion >\r\n                            <Service eKey=\"0\" header=\"Service 1: UEN Validate\"\r\n                                contents={service1_content} />\r\n                            <Service eKey=\"1\" header=\"Service 2: Weather Forecast\"\r\n                                contents={service2_content} />\r\n                        </Accordion>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container >\r\n        </Fragment >\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","// Libraries\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\n// Import Resources\r\nimport { mainColor, subColor } from \"../../components/Color/Color.jsx\"\r\n\r\n\r\nconst media_max_width = \"800px\";\r\n\r\n// Hold Icon\r\nexport const IconContainer = styled(Link)`\r\n\r\n\r\n`;\r\n\r\n// Icon\r\n// background-image: url(${Icon});\r\nexport const NavIcon = styled.button`\r\n    width: 180px;\r\n    height:100px;\r\n    background-repeat:no-repeat;\r\n    background-size: cover;\r\n   \r\n    cursor:pointer;\r\n    border:none;\r\n    outline:none;\r\n    background-color:transparent;\r\n\r\n`;\r\n\r\n// Navigation Bar\r\nexport const NavBar = styled.div`\r\n\theight: 100%;\r\n\tline-height: 100%;\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tjustift-content: space-around;\r\n\talign-item: center;\r\n\tmargin-left: auto;\r\n\tmargin-right: auto;\r\n\tpadding:0;\r\n\tbackground-color:${mainColor};\r\n\r\n\t@media only screen and (max-width: ${media_max_width}) {\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\tfloat: none;\r\n\t\theight: auto;\r\n\t}\r\n`;\r\n\r\n\r\n// Navigation Links\r\nexport const NavButton = styled(Link)`\r\n\tposition: relative;\r\n\ttext-decoration: none;\r\n    text-align: center;\r\n\tcolor: white;\r\n\tfont-size: 15px;\r\n    font-weight: bold;\r\n    font-family: OpenSans, Helvetica, sans-serif;\r\n\tpadding: 15px 0px;\r\n\theight: 100%;\r\n\tline-height: 100%;\r\n\twidth: 33%;\r\n\r\n\r\n\t&:hover {\r\n\t\tcolor: white;\r\n\t\ttext-decoration: underline;\r\n\t\tbackground-color:${subColor};\r\n\t\r\n\t}\r\n\r\n\t@media only screen and (max-width: 800px) {\r\n\t\tdisplay:block;\r\n\t\tpadding: 10px 5px;\r\n        width:100%;\r\n\t}\r\n`;\r\n\r\n// Horizontal Line Encasing The Navigation Bar\r\nexport const NavLine = styled.hr`\r\n    border:none;height:4px;\r\n    background-color: ${mainColor};\r\n    margin-top:0px;\r\n    margin-bottom:0px;\r\n`;\r\n\r\n// Vertical Line Separating Each Navigation Link\r\nexport const NavDivider = styled.div`\r\n    margin: 0;\r\n    height:15px;\r\n    width:2px;\r\n\tpadding:0;\r\n    background-color:${subColor};\r\n\r\n    @media only screen and (max-width: ${media_max_width}) {\r\n        display:none;\r\n    }\r\n`;\r\n","// React Libraries\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\n\r\n// Pages\r\nimport Uen_Validate from \"../../pages/uen-validate/uen-validate.js\";\r\nimport Weather from \"../../pages/WeatherForecast/WeatherForecastPage.js\";\r\nimport Home from \"../../pages/home/home.js\";\r\n\r\n\r\n// Import Resources\r\nimport { NavBar, NavButton, NavDivider } from \"./NavigationElements\"\r\n\r\n\r\n\r\n// Navigation Component\r\nconst Navigation = () => {\r\n    return (\r\n        <Router className=\"router\">\r\n            <NavBar className=\"navbar\">\r\n                <NavButton to={`${process.env.PUBLIC_URL}/`}>Home</NavButton>\r\n                <NavDivider className=\"divider\" />\r\n                <NavButton to={`${process.env.PUBLIC_URL}/uen-validate`}>Validate UEN</NavButton>\r\n                <NavDivider className=\"divider\" />\r\n                <NavButton to={`${process.env.PUBLIC_URL}/weather-forecast`}>SG Weather</NavButton>\r\n            </NavBar>\r\n            <Switch>\r\n                <Route path={`${process.env.PUBLIC_URL}/`} exact component={Home} ></Route>\r\n                <Route path={`${process.env.PUBLIC_URL}/uen-validate`} component={Uen_Validate} ></Route>\r\n                <Route path={`${process.env.PUBLIC_URL}/weather-forecast`} component={Weather} ></Route>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n\r\n}\r\n\r\nexport default Navigation;","\r\n\r\nimport Navigation from '../Navigation/Navigation.js'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <Navigation />\r\n        </header>\r\n    );\r\n}\r\n\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nimport { mainColor, subColor } from \"../../components/Color/Color.jsx\";\r\n\r\n\r\nexport const FooterContainer = styled.footer`\r\npadding: 15px 30px;\r\nbackground-color: ${mainColor};\r\ncolor:white;\r\n`;\r\n\r\nexport const DesignByContainer = styled.div`\r\nbackground-color:${subColor};\r\ncolor:white;\r\npadding: 10px 20px;\r\ntext-align:center;\r\nfont-family: Segoe Print;\r\nfont-size:15px;\r\n`;","import { Dot } from 'react-bootstrap-icons';\r\nimport { DesignByContainer, FooterContainer } from \"./FooterElements\";\r\n\r\n// Main Footer\r\nconst Footer = () => {\r\n    return (\r\n        <>\r\n            <DesignByContainer><Dot/> Designed By Tracie <Dot/> 2021 <Dot/></DesignByContainer>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default Footer","import './App.css';\n\n// Import Components\nimport Header from \"./components/Header/Header.js\";\nimport Footer from \"./components/Footer/Footer.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}